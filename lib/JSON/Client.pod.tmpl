[% start_year=2021 %]
[% MACRO example(file) BLOCK %]
[%- pl =  file _ ".pl" -%]
[%- out = file _ "-out.txt" -%]
[% INCLUDE $pl | xtidy %]
(This example is included as L<F<[% pl %]>|https://fastapi.metacpan.org/source/BKB/JSON-Server-[% info.version %]/examples/[% pl %]> in the distribution.)
[% END %]
[% MACRO since(version) BLOCK -%]
This method was added in version [% version %] of the module.
[%- END %]
=encoding UTF-8

=head1 NAME

JSON::Client - Example client for JSON::Server

=head1 VERSION

This documents version [% info.version %] of JSON::Client
corresponding to L<git commit [% commit.commit %]|[% info.repo
%]/commit/[% commit.commit %]> released on [% commit.date %].

=head1 DESCRIPTION

This is an example client module for L<JSON::Server> which sends and
receives to a JSON::Server server.

=head1 SYNOPSIS

    my $client = JSON::Client->new (
        port => '5555', # This is the port of the server we are using
    );

=head1 METHODS

=head2 new

Make a new JSON client object. Possible options are

=over

=item port

The port of the JSON::Server we are communicating with.

=item verbose

Print debugging messages. The format and frequency of these messages
should not be relied upon.

=back

=head2 send

    my $reply = $client->send ($data);

Send data. The return value is the response of the server, decoded
from the JSON.

=cut

=head1 SEE ALSO

See the documentation for L<JSON::Server> for details of dependencies.

[% INCLUDE "author" %]
